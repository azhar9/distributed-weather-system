version: '2'
services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: timescaledb
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/schema.sql:/docker-entrypoint-initdb.d/init.sql

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3500:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"

  kafka_zookeeper:
    image: 'bitnami/zookeeper:3.7.0'
    restart: "no"
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: kafka_zookeeper

  kafka_broker:
    image: 'bitnami/kafka:2.7.0'
    restart: "no"
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka_broker:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=kafka_zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    container_name: kafka_broker
    depends_on:
      - "kafka_zookeeper"

volumes:
  db-data: {}
  grafana-data: {}